
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.net.ServerSocket;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.DefaultCaret;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author qq
 */
public class Server extends javax.swing.JFrame {

    static ArrayList<ClientHandler> client_list;
    static int names = 0;
    static String name;
    static String send;

    public Server() {
        initComponents();
        jta_chat.setEditable(false);
        jta_crptychat.setEditable(false);
        DefaultCaret caret = (DefaultCaret) jta_chat.getCaret();
        caret.setUpdatePolicy(DefaultCaret.OUT_BOTTOM);
        DefaultCaret caret1 = (DefaultCaret) jta_crptychat.getCaret();
        caret1.setUpdatePolicy(DefaultCaret.OUT_BOTTOM);

    }

    public void toSend() {
        send = jtf_text.getText();
        for (int i = 0; i < client_list.size(); i++) {
            if (client_list.get(i) != null) {
                try {
                    client_list.get(i).getDos().writeUTF("Server: " + send);
                } catch (IOException ex) {
                    Logger.getLogger(ClientHandler.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        jta_chat.setText(jta_chat.getText() + "\n" + "Server: " + send);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPasswordField1 = new javax.swing.JPasswordField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jta_chat = new javax.swing.JTextArea();
        jtf_text = new javax.swing.JTextField();
        btn_send = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jta_crptychat = new javax.swing.JTextArea();
        jlbl_cryptText = new javax.swing.JLabel();

        jPasswordField1.setText("jPasswordField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Server");

        jta_chat.setColumns(20);
        jta_chat.setRows(5);
        jScrollPane1.setViewportView(jta_chat);

        jtf_text.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtf_textKeyPressed(evt);
            }
        });

        btn_send.setText("Gönder");
        btn_send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_sendActionPerformed(evt);
            }
        });

        jta_crptychat.setColumns(10);
        jta_crptychat.setRows(5);
        jta_crptychat.setTabSize(5);
        jScrollPane2.setViewportView(jta_crptychat);

        jlbl_cryptText.setFont(new java.awt.Font("Consolas", 0, 16)); // NOI18N
        jlbl_cryptText.setText("Şifreli Mesajlar");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jtf_text)
                        .addGap(18, 18, 18)
                        .addComponent(btn_send, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jlbl_cryptText, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtf_text)
                    .addComponent(btn_send, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jlbl_cryptText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 383, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_sendActionPerformed
        toSend();
    }//GEN-LAST:event_btn_sendActionPerformed

    private void jtf_textKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtf_textKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            toSend();
        }
    }//GEN-LAST:event_jtf_textKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) throws IOException {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Server.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Server().setVisible(true);
            }
        });
        ClientHandler client = null;
        ServerSocket serverSocket = new ServerSocket(5056);
        client_list = new ArrayList<ClientHandler>();
        while (true) {
            try {
                if (!client_list.isEmpty()) {
                    System.out.println("A new client is connected : ");
                }
                name = String.valueOf(names);
                names++;
                client = new ClientHandler(serverSocket.accept(), name, client_list, jta_chat, jta_crptychat);
                client_list.add(client);
                client.start();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_send;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel jlbl_cryptText;
    private static javax.swing.JTextArea jta_chat;
    private static javax.swing.JTextArea jta_crptychat;
    private javax.swing.JTextField jtf_text;
    // End of variables declaration//GEN-END:variables
}
